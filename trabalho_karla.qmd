---
title: "Análise da distribuição de eventos adversos de interesse especial graves na vacinação contra a COVID-19 no Brasil"
author: "**Karla de Araujo Ferreira**"
lang: pt
format:
    pdf: default
    html: 
      self-contained: true
link-citations: TRUE
number-sections: true
bibliography: references.bib
csl: epidemiology.csl
---

**Disciplina: Estudos ecológicos - 2023**

**Programa de Pós-Graduação Stricto-Sensu em Epidemiologia em Saúde Pública, Escola Nacional de Saúde Pública Sergio Arouca, Fundação Oswaldo Cruz.**

**Rio de Janeiro, dezembro de 2023.**

# Análise de série temporal

## **Introdução**

A doença por coronavírus 2019 (COVID-19) é um agravo infecioso altamente contagioso causado pelo Coronavírus da Síndrome Respiratória Aguda Grave 2, que foi responsável por 6,9 milhões de mortes em todo o mundo [@chilamakuri2021; @rahman2021]. Devido à gravidade da pandemia, o desenvolvimento e o uso de vacinas para o controle da doença aconteceram de forma muito rápida, sem precedentes na história [@rudolph2022]. A eficácia e a segurança das vacinas foram amplamente demonstradas nos ensaios clínicos randomizados, no entanto, o monitoramento contínuo dos eventos adversos é necessário para a avaliação periódica da relação benefício-risco desses produtos [@polack2020a ; @sadoff2021 ; @voysey2021 ; @lavertu2021].

De acordo com a Organização Mundial da Saúde (OMS), os eventos adversos de interesse especial (EAIE) são eventos clinicamente significativos pré-identificados e predefinidos que têm potencial de estarem causalmente associados à vacina que precisam ser cuidadosamente monitorados e confirmados por outros estudos [@worldhealthorganization]. As condições comumente consideradas como EAIE incluem eventos graves que já foram vistos com outras vacinas, eventos graves potencialmente associados a novas plataformas, eventos graves potencialmente relacionados a adjuvantes, eventos graves relacionados à falha da imunogenicidade da vacina ou eventos potencialmente específicos para populações especiais [@fundaçãooswaldocruz2023]. A lista de EAIE que devem ser monitorados na vacinação contra a COVID-19 foi publicada pela *Brighton Collaboration* (BC) e recomendada pela OMS [@law2020; @fraiman2022; @brightoncollaboration2022].

## **Objetivos**

-   Descrever a ocorrência internações hospitalares no SUS correspondentes aos EAIE graves no período anterior à vacinação e avaliar os efeitos da introdução da vacinação sobre a distribuição temporal desses eventos.

## **Métodos**

Trata-se de um estudo com desenho ecológico exploratório de série temporal. A população de interesse é formada por adultos hospitalizados com 18 anos ou mais e o período de análise foi de janeiro de 2015 a dezembro de 2022.

Para verificar se a introdução da vacinação contra a COVID-19 resultou em aumento do número de internações relacionadas aos EAIE, aplicou-se o método de análise de séries temporais interrompidas (STI) com modelo ARIMA. Esse tipo de desenho, comumente utilizado para avaliação de efetividade de intervenções em saúde em nível populacional, é considerado uma boa abordagem para avaliação de causalidade quando estudos randomizados não são factíveis. A análise se baseia na verificação da tendência existente na série de casos antes da intervenção para determinar um comportamento esperado no período pós-intervenção, referido usualmente como contrafactual (o que teria ocorrido caso não houvesse a intervenção). Este cenário hipotético é utilizado como comparador para avaliação do impacto da intervenção [@lopezbernal2016 ; @schaffer2021 ; @gianacas2023].

A variável de desfecho foi definida como o total de EAIE graves por 100.000 internações/mês. O início da intervenção foi janeiro de 2021, quando foi iniciada a campanha de vacinação no Brasil.

Foi utilizado o algoritmo automatizado, auto.arima() do pacote *forecast* do R para identificação dos termos do modelo ARIMA com todas as observações da série (96 meses). Foram incluídas covariáveis para indicar o início da pandemia, bem como o início da intervenção na série temporal via funções de transferência *step* e *ramp* [@schaffer2021]. O modelo com menor AIC ou BIC selecionado pelo método foi (2,1,0)x(0,1,1)˜12˜. Um segundo modelo com os mesmos termos foi ajustado para obtenção do contrafactual apenas com as observações anteriores ao início da vacinação (72 meses).

As condições (subcategorias CID) correspondentes aos EAIE encontram-se listadas no Anexo. Esses CID foram pesquisados nos campos de diagnóstico principal e diagnóstico secundário das Autorizações de Internação Hospitalar do SUS no período analisado.

```{r setup, include = FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  include = FALSE)
library(tidyverse)
library(kableExtra)
```

```{r leitura}
# ler arquivo
df <- read.csv("/Users/karlaferreira/Documents/Ensp 2023/bsts_its/BD_maior18_3.csv")
str(df)

library(tidyverse)
library(DescTools)

#criar variavel dia com formato de data 
  df <-df |>   
    mutate(data = ymd(DT_INTER)) 

#criar variaveis sexo, faixa etaria e regiao
df <- df |> mutate (sex = ifelse(SEXO == 1, "M", "F"))

df <-df |> 
  mutate(fx_eta = cut(IDADE, breaks = c(18,39,60,100), right = FALSE))

df <-df |> mutate (regiao0 = substr(as.character(MUNIC_RES), 1,2))

df$regiao <-  Recode(as.factor(df$regiao0),
                       "Norte" = c("11", "12","13", "14", "15", "16", "17"),
                       "Nordeste" = c("21", "22", "23", "24", "25", "26", "27",
                                      "28","29"),
                       "Sudeste" = c("31", "32", "33", "34", "35"),
                       "Sul" = c("41", "42", "43"),
                       "Centro-Oeste" = c("50", "51", "52", "53")
                              )

#criar variavel mes/ano - tb18
df <- df |> 
  mutate(ano_mes = format(data, format = "%Y-%m"))

#total de aesi por mes/ano
df.t <- df |> 
  group_by(ano_mes) |> 
  summarize(total = n())
#write.csv(df.t, "total.csv")

#total de internacoes mes/ano
total <- read.csv("total_mes_ano.csv")

#taxa por 100.000 internacoes
dft.2 <- as.data.frame(cbind(df.t$ano_mes,round((df.t$total/total$total)*100000,1)))

names(dft.2) <- c("ano_mes", "taxa")
dft.2$taxa <- as.numeric(dft.2$taxa)

```

```{r exploratoria}
library(ggplot2)

# Histogram by sex in ggplot2
hist <- ggplot(df, aes(x = IDADE, colour = sex)) + 
  geom_histogram() 
#ggsave("figures/plot_hist.jpg",hist, dpi=300)

summary(df$IDADE)

#total de AESI

tot <- df |> 
  summarize(total = n())

#mais de 100 anos
df |> 
  filter(IDADE > 100) |> 
  summarize(total = n())

#data frame para distintas internacoes 
df2 <-  df |> 
  distinct (N_AIH, sex, IDADE, fx_eta, regiao, MORTE)

#Freq. by regiao
df2 |> 
  group_by(regiao) |> 
  summarize(total = n(), perc = (n()/tot)*100 )

#Freq. by sex
df2 |> 
  group_by(sex) |> 
  summarize(total = n(), perc = (n()/tot)*100 )

#Freq. by faixa etaria
df2 |> 
  group_by(fx_eta) |> 
  summarize(total = n(), perc = (n()/tot)*100 )



#Table 1 by sex
library(gtsummary)
library(gt)
table1 <- df2 |> 
  tbl_summary(by = sex, include = c(IDADE,fx_eta, regiao, MORTE))  |> #,
              #digits = ~ function (x){
              #style_number(x,big.mark = ".", decimal.mark = ",")                                                                 
              #}) 
  add_overall(col_label = "**Total**") |>  
  add_n() |> 
  modify_header(label ~ "**Variável**") |>
  modify_spanning_header(c("stat_1", "stat_2") ~ "**Sexo**") |> 
  modify_caption("**Tabela 1. Características dos pacientes**") 
###!!! chrome is required to save gtsummary table as gt table!
#table1 |>   
#as_gt() |> 
#gtsave(filename="figures/table1.png")
#parou de funcionar

#mediana de idade 64
# 60% com 60 anos ou mais
# 53% na regiao sudeste
# 16% de obitos

#internacoes por covid
df |> 
  filter(CID %in% c("U071", "U072", "B972", "B342", 
                         "U10","U08", "U049")) |> 
  summarize(total = n())

#total de internacoes
length(unique(df$N_AIH))
#EAIE por internacao
length(df$N_AIH)/length(unique(df$N_AIH))

#N_AIH distintos

```

```{r st}
#objeto serie temporal
library(forecast)
dft.ts <- ts(dft.2$taxa, start = c(2015,1), frequency = 12)

autoplot(dft.ts, ylab = "EAIE/100.000 internações") +
  geom_vline(xintercept=as.numeric(as.Date("2021-01-18")), linetype=2, color = "gray")+
  theme(text = element_text(size = 9))

#Analise descritiva da serie
length(dft.ts)
range(dft.ts)
frequency(dft.ts)
start(dft.ts)
end(dft.ts)
summary(dft.ts)
hist(dft.ts)
boxplot(dft.ts)
which.min(dft.ts)
which.max(dft.ts)

#Checando autocorrelacao
acf(dft.ts, lag.max=20, main="Função de Autocorrelação")
Box.test(dft.ts, lag=20, type="Ljung-Box")
#rejeita-se a hipótese de ausência de autocorrelação
#das internações por EAIE
# View ACF/PACF plots of undifferenced data
library(astsa)
acf2(dft.ts, max.lag=24)

#Decomposicao da serie
#componentes: tendencia, sazonalidade.
#random: efeito nao temporal
plot(stl(dft.ts, s.window="periodic"))

#Plotar a serie decomposta
decom <- stl(dft.ts,13)
head(decom$time.series)
plot(decom)

#recompor a serie
Trend <- decom$time.series[,2]
Seasonal <-  decom$time.series[,1]
Random <- decom$time.series[,3]

recomposed <- Trend+Seasonal+Random

jpeg(file="recomposed.jpg", width = 15, height = 10, units = "cm", pointsize = 12,res = 600, quality = 85) 
par(mfrow=c(1,2))
plot(dft.ts, ylab="EAIE/100.000 int.", main="Original")
plot(as.ts(recomposed), ylab="", main="Recomposta")
dev.off()
#com ggplot
library(ggplot2)
library(ggfortify)
autoplot(dft.ts)
autoplot(decompose(dft.ts))

#testando estacionaridade
library(tseries)
adf.test(dft.ts)
#p-value = 0.06 - rejeta-se hipotese de nao estacionaridade.

#avaliando tendencia
#lowes e regressao linear para visualizar tendencia
library(Kendall)
jpeg(file="EAIEts.jpg", width = 15, height = 10, units = "cm", pointsize = 12, res = 600, quality = 85)
plot(dft.ts, ylab = "EAIE/100.000 internações",
              xlab= "tempo")
#lines(lowess(time(dft.ts),dft.ts),lwd=3, col= "blue")
#abline(reg=lm(dft.ts ~ time(dft.ts)), col = "red")
# Add vertical line indicating date of intervention
abline(v=2021, col="gray", lty="dashed", lwd=2)
dev.off()

#tendencia pela media anual
plot(aggregate(dft.ts, FUN=mean))

# Avaliando sazonalidade
boxplot(dft.ts ~ cycle(dft.ts))  
monthplot(dft.ts)

library(forecast)
seasonplot(dft.ts,col=terrain.colors(6),lwd=2)  

diff_12 <- diff(dft.ts, 12)
acf2(diff_12, 48)

#usando pacotes tsibble e feasts
library(tsibble)
library(feasts)
dft.tb <- as_tsibble(dft.ts)
#sazonalidade
gg_subseries(dft.tb)

#decomposicao
dft.ft <- dft.tb |> 
    model(STL(value ~ season(window = "periodic"))) |> 
    components()

dft.ft |> 
  select(-.model)
#grafico dos componentes da serie
plot2 <- dft.ft |> 
  autoplot()

#métricas dos componentes
dft.ft |> 
    features(value, feat_stl) |> 
    select(-.model) |> 
    pivot_longer(1:9) |> 
    mutate(value = round(value, 4))

```

```{r arima}

library (zoo)
# Create variable representing step change and view
#vaccine introduction - january 2021
step <- as.numeric(as.yearmon(time(dft.ts))>='Jan 2021')
step

#variable represent COVID-19 pandemic
pand <- as.numeric(as.yearmon(time(dft.ts))>='Mar 2020')

# Create variable representing ramp (change in slope) and view
ramp <- append(rep(0,72), seq(1,24,1))
ramp  

# Use automated algorithm to identify p/q parameters
# Specify first difference = 1 and seasonal difference = 1
arima1 <- auto.arima(dft.ts, seasonal=TRUE, xreg=cbind(step,ramp, pand), 
                     stepwise=FALSE, trace=TRUE)

summary(arima1)

#install.packages("lmtest")
library(lmtest)
# Use coeftest to get p-values for coefficients
coeftest(arima1)

# Check residuals
checkresiduals(arima1)

jpeg(file="tsdiag1.jpg", width = 10, height = 15, units = "cm", pointsize = 12,res = 600, quality = 85)
tsdiag(arima1)
dev.off()

# Estimate parameters and confidence intervals
summary(arima1)
confint(arima1)

#H0: there is no signicant autocorrelation
Box.test(arima1$residuals, lag = 24, type = "Ljung-Box")


# To forecast the counterfactual, model data excluding post-intervention time period
arima2 <- Arima(window(dft.ts, end=c(2020,12)), order=c(2,1,0), seasonal=list(order=c(0,1,1), period=12))

# Forecast 12 months post-intervention and convert to time series object
fc <- forecast(arima2, h=24)
fc.ts <- ts(as.numeric(fc$mean), start=c(2021,1), frequency=12)

#check residuals arima2
checkresiduals(arima2)
qqnorm(arima2$residuals)

jpeg(file="tsdiag2.jpg", width = 10, height = 15, units = "cm", pointsize = 12,res = 600, quality = 85)
tsdiag(arima2)
dev.off()

# Combine with observed data
dft.ts.2 <- ts.union(dft.ts, fc.ts)
dft.ts.2

mape_arima <- as.data.frame(dft.ts.2[73:96,])
mape_arima |>  
  summarise(mape_arima2=(mean(abs(dft.ts-fc.ts)/dft.ts)*100))
# mape arima pós intervenção: 4.23
#indica a diferenca media entre observado e esperado em porc.

# Plot
jpeg(file="arima.jpg", width = 15, height = 10, units = "cm", pointsize = 12,res = 600, quality = 85)
plot(dft.ts.2, type="l", plot.type="s", col=c('blue','red'),      ylab="EAIE/100.000 int.", linetype=c("solid","dashed"))
abline(v=2021, lty="dashed", col="gray", main = " Contrafactual ARIMA")
dev.off()

#residuals histogram
# Histogram with density plot

#hist arima1
plot61 <- ggplot(arima1$residuals, aes(x=arima1$residuals)) + 
 geom_histogram(aes(y=..density..), colour="black", fill="white")+
 geom_density(alpha=.2, fill="cyan4") +
  labs(x= "resíduos série completa", y = "densidade") +
  theme(axis.text = element_text(size = 3))+
  theme_classic()

#hist arima2
plot62 <-ggplot(arima1$residuals, aes(x=arima1$residuals)) + 
 geom_histogram(aes(y=..density..), colour="black", fill="white")+
 geom_density(alpha=.2, fill="#FF6666") +
  labs(x= "resíduos contrafactual", y = "densidade") +
  theme(text = element_text(size = 5))+
  theme_classic()

library(gridExtra)
plot6 <- grid.arrange(plot61, plot62, ncol = 2)
ggsave("histogram.jpg",plot6, dpi=300)

```
## **Resultados**

No período de janeiro de 2015 a dezembro de 2017 ocorreram 3.735.180 EAIE graves em um total de 3.627.942 internações (1,02 EAIE por internação). A idade mediana na amostra é de 63 anos (IIQ: 51-76), com 60% do pacientes com idade superior ou igual a 60 anos e 53,7% do sexo masculino. O período de análise compreende 96 meses sendo o valor mínimo de 4.060 EAIE por 100.000 internações observado em março de 2015 e o valor máximo em agosto de 2020 (5.760/100.000), com média de 4.892/100.000.

A @fig-Figura1 apresenta a taxa mensal de EAIE graves para a vacinação contra a COVID-19 por 100.000 internações no período de análise. A série apresenta componente de sazonalidade com a maior parte dos casos ocorrendo no fim de cada ano, com exceção dos anos de 2020 e 2021 que apresentam pico de casos no meio do ano. O gráfico também indica a presença de tendência com evidente aumento dos casos no período observado.

```{r Figura1, include=TRUE}
#| label: fig-Figura1
#| fig-cap: "Taxa de eventos adversos de interesse especial graves para a vacinação contra a COVID-19 por 100.000 internações no SUS no período de 2015 a 2022. A linha vertical indica o início da vacinação em adultos."
#| out-width: "80%"

knitr::include_graphics("EAIEts.jpg", dpi=600)

```

A @fig-Figura2 apresenta a decomposição da série temporal da taxa mensal de EAIE graves pelo método STL (*Seasonal and Trend decomposition using Loess*). De acordo com as métricas de força do método, a tendência é um componente forte (0,94) e a sazonalidade é um componente de força intermediária (0,619). No componente gráfico da tendência, verifica-se o aumento da taxa de EAIE ao longo da série, com uma estabilização nos últimos anos. A @fig-Figura3 mostra a série original e a série recomposta pelo método STL.

```{r Figura2, include=TRUE}
#| label: fig-Figura2
#| fig-cap: "Taxa de eventos adversos de interesse especial graves para a vacinação contra a COVID-19 e seus três componentes aditivos (tendência, sazonalidade e restante.)"
#| out-width: "15cm"
#| out-height: "15cm"

plot2

```

```{r Figura3, include=TRUE}
#| label: fig-Figura3
#| fig-cap: "Série original e série recomposta pelo método STL para a taxa de eventos adversos de interesse especial graves."
#| out-width: "80%"
knitr::include_graphics("recomposed.jpg", dpi=600)

```

A @fig-Figura4 compara as taxas de EAIE observadas na série com os valores preditos (na cor vermelha) pelo modelo ARIMA para o período posterior ao início da vacinação. Pelo gráfico verifica-se que não houve aumento de internações por EAIE em relação ao que seria esperado para o período. O efeito imediato da vacinação a partir de fevereiro de 2021 foi de -194,4 EAIE por 100.000 internações (IC 95% -404,2;15,4), seguido de uma diminuição sustentada de 1,4/100.000 (IC95%: -32,6;29,9) por mês até dezembro de 2022. De acordo com o contrafactual definido pelo modelo ARIMA, não há diferença estatisticamente significante entre os períodos pré e pós vacinação com relação a hospitalizações por condições correspondentes aos EAIE.

```{r Figura4, include=TRUE}
#| label: fig-Figura4
#| fig-cap: "Valores observados e valores preditos com base no modelo ARIMA ARIMA(2,1,0)(0,1,1)[12] para a taxa de eventos adversos de interesse especial graves no SUS após o início da vacinação contra a COVID-19."
#| out-width: "80%"
knitr::include_graphics("arima.jpg", dpi=600)

```

Os resultados relativos à qualidade do ajuste dos modelos ARIMA para a série completa e para o contrafactual encontram-se dispostos nas @fig-Figura5 e @fig-Figura6. Verifica-se que não há presença de autocorrelação em ambos os casos, no entanto, há observações atípicas que afetam o pressuposto de normalidade dos resíduos (@fig-Figura7). Destaca-se como atípico o mês de abril de 2020, logo após a declaração da COVID-19 como Emergência de Saúde Pública de Importância Internacional pela OMS.

```{r Figura5, include=TRUE}
#| label: fig-Figura5
#| fig-cap: "Análise dos resíduos para o modelo ARIMA(2,1,0)(0,1,1)[12] da série completa."
#| out-width: "80%"
knitr::include_graphics("tsdiag1.jpg", dpi=600)

```

```{r Figura6, include=TRUE}
#| label: fig-Figura6
#| fig-cap: "Análise dos resíduos para o modelo ARIMA(2,1,0)(0,1,1)[12] do contrafactual."
#| out-width: "80%"
knitr::include_graphics("tsdiag2.jpg", dpi=600)

```

```{r Figura7, include=TRUE}
#| label: fig-Figura7
#| fig-cap: "Gráfico de densidade dos resíduos para os modelos ARIMA(2,1,0)(0,1,1)[12] - série completa e contrafactual."
#| out-width: "80%"
knitr::include_graphics("histogram.jpg", dpi=600)

```

## **Discussão**

O resultado inicial reforça a segurança das vacinas contra a COVID-19 no cenário nacional, uma vez que não foi verificado aumento significativo de um conjunto de eventos de interesse para monitoramento (EAIE). No entanto, ainda são necessárias análises por subgrupos (sexo, faixa etária) para melhor caracterização da incidência EAIE com dados do SUS.

\newpage

# Análise espacial

## **Introdução**

No dia 18 de janeiro de 2021 foi iniciada a Campanha Nacional de Vacinação contra a COVID-19 no Brasil [@ministériodasaúde.secretariaextraordináriadeenfrentamentoàcovid-192022]. Passado um ano do início da vacinação, verificou-se uma cobertura maior dos municípios com IDH (Índice de Desenvolvimento Humano) mais alto. Os componentes desse índice (longevidade, renda e escolaridade) naturalmente se associam à cobertura, pois a vacinação teve como um dos grupos prioritários a população de idosos, ainda assim, a distribuição geográfica da cobertura vacinal reflete um padrão de desigualdade normalmente observado na distribuição dos agravos de saúde. Foram observadas coberturas mais elevadas nas regiões Sul e Sudeste e bolsões com baixa imunização nas regiões Norte, Nordeste e Centro-Oeste [@fiocruz] 

Até o fim de 2022, haviam sido aplicadas mais de 504 milhões de doses das vacinas contra a COVID-19 em todo o país [@ministériodasaúde2023a]. Em fevereiro de 2023, o país apresentava uma cobertura vacinal de 86,0% para a primeira dose e de 77,8% para a segunda dose (esquema primário). Nesse momento, a cobertura era de 65,4% e 38,7% para a primeira e segunda doses de reforço respectivamente. No esquema básico, as faixas etárias que alcaçaram a meta de pelo menos 90% para a dose 1 foram a de 12 a 29 anos e a de 50 a 80 anos. Na dose 2, a meta foi atingida apenas na faixa etária de 50 a 80 anos. Quanto à distribuição espacial da cobertura no esquema vacinal primário, 2.612 municípios alcançaram a meta de 90% para a dose 1 e 1.899 para a dose 2 [@ministériodasaúde2023g].

## **Objetivos**

- Analisar a distribuição da cobertura da primeira e segunda doses da vacina contra a COVID-19 nos municípios do Rio de Janeiro.

## **Métodos**

Foi realizado um estudo ecológico a partir de dados que foram obtidos na página do Painel de Cobertura Vacinal COVID do Ministério da Saúde [@coberturavacinalms]. Esse estudo utilizou dados de cobertura por residência, que consideram as informações do endereço cadastrado no Cartão Nacional de Saúde (CNS) do cidadão [@SEI/MS0036724379].

A cobertura vacinal é calculada pelo Ministério da Saúde dividindo o número de indivíduos vacinados pelo número total de pessoas elegíveis para vacinação multiplicando por 100. No denominador são utilizadas as estimativas populacionais mais recentes publicadas pelo Instituto Brasileiro de Geografia e Estatística (IBGE) [@SEI/MS0036724379].

Foi realizada análise exploratória aplicada a dados espaciais de área. Primeiramente foi elaborado o mapa temático com apresentação dos valores de cobertura vacinal organizados em categorias de intervalos iguais. 

Na etapa seguinte, buscou-se identificar existência de estrutura de correlação espacial entre as áreas. Inicialmente foi obtido o Índice Global de Moran, que fornece um valor único para resumir a associação espacial de forma geral para todo o conjunto de dados. O índice I de Moran é uma medida de autocorrelação espacial que quantifica o grau em que valores semelhantes estão agrupados ou dispersos em um conjunto de dados espaciais.

Em seguida, para examinar os padrões espaciais em maior detalhe, utilizou-se o Índice de Moran Local, que é um indicador local de associação espacial (LISA). Para isso, foi obtida uma matriz de vizinhança por contiguidade, transformada em seguida em uma matriz de pesos que foi utilizada para para estimar o Índice de Moran. Este índice permite fazer a clusterização de observações no espaço para avaliar a existência de dependência espacial. O nível de significância adotado foi de 0,05. Os valores determinados pelo Índice de Moran Local foram apresentados graficamente em um mapa (Lisa Map).

```{r espacial}
# Arquivos ----------------------------------------------------------------

#Shape UF IBGE malha municipal - Rio de Janeiro
library(sf)
library(colorspace)

rj.sf <- read_sf("/Users/karlaferreira/Documents/Ensp 2023/Ecologicos/RJ_Municipios_2022/RJ_Municipios_2022.shp",crs = 31981)
st_crs(rj.sf)

#cobertura vacinal esquema primário em 21/12/23
#Ministério da Saúde - Cobertura Vacinal COVID-19
cobrj <- readxl::read_xlsx("cobertura_RJ.xlsx")
cobrj <- cobrj |> janitor::clean_names()
names(cobrj)

#juntar os dados de cobertura e shape UF
rj.sf2 <- rj.sf |> 
  mutate(municipio_residencia = NM_MUN)  |> 
  inner_join(cobrj, by = "municipio_residencia")

rj.sf2 <- rj.sf2 |> 
  mutate(cobertura = round(cobertura_vacinal_2_doses_percent*100, digits = 1))

#estatisticas sumarias
summary(rj.sf2$cobertura)
rj.sf2$NM_MUN[which.max(rj.sf2$cobertura)]
rj.sf2$NM_MUN[which.min(rj.sf2$cobertura)]

boxplot(rj.sf2$cobertura)
hist(rj.sf2$cobertura)

#total que cumpriram meta: 25
as.data.frame(rj.sf2) |> 
  filter(cobertura >= 90) |> 
   summarize(total = n())

#mapa tematico para cobertura
g1rj <- ggplot(rj.sf2) + 
  geom_sf(aes(fill = cut_interval(cobertura,5)), size = 0.2) + 
  colorspace::scale_fill_discrete_sequential(palette = "Reds",
name = "cobertura %") +
  #labs(title = "Cobertura vacinal COVID-19 - 2 doses") +
  #annotation_scale(location = "bl", width_hint = 0.4) +
  #annotation_north_arrow(location = "bl", which_north = "true", style = north_arrow_minimal) +
  theme(legend.title = element_text(size = 9)) +
  theme(legend.text = element_text(size = 7)) +
  theme_void()

g2rj <- ggplot(rj.sf2, aes(cobertura)) + 
  geom_density(fill = "red", alpha = 0.2) +
  geom_vline(xintercept = quantile(rj.sf2$cobertura,
probs = seq(0, 1, by = 0.2)), color = "red", linetype = "dashed") +
  labs(x= "cobertura %", y = "densidade") +
  theme(text = element_text(size = 7)) +
  theme(plot.margin = margin(3, 1, 1, 1, "cm"))

temarj <- ggpubr::ggarrange(g1rj, g2rj, nrow = 1, widths = c(6.5,3.5))
ggsave("tematico_rj.jpg",temarj, dpi=300)


# Vizinhanca --------------------------------------------------------------

library(sf)
#Coordenadas dos centroides das UF
centroides <- sf::st_centroid(rj.sf2)
coordenadas <- sf::st_coordinates(centroides)

# Convertendo para Spatial Polygons para usar
# poly2nb
rj.sp <- as_Spatial(rj.sf2)

library(spdep)
# Criando a vizinhança
vizrj <- poly2nb(rj.sp)
vizrj

# Transformando a vizinhança em linhas para
# plotar
viz.sfrj <- nb2lines(vizrj, coords = coordenadas, as_sf = TRUE)
viz.sfrj <- st_set_crs(viz.sfrj, st_crs(rj.sf2))

# Plotando o mapa de conectividade por
# contiguidade
conect_rj <- ggplot() + 
  geom_sf(data = rj.sf2, fill = "salmon", size = 0.2,color = "white") + 
  geom_sf(data = centroides, size = 1) +
  geom_sf(data = viz.sfrj, size = 0.2) + 
  #ggtitle("Vizinhança por conectividade") +
  ylab("Latitude") + xlab("Longitude") + 
  theme_minimal()
ggsave("conect_rj.jpg",conect_rj, dpi=300)

# Autocorrelacao ----------------------------------------------------------

library(tmap)

#correlacao da cobertura vacinal
pesos.vizrj <- nb2listw(vizrj)
moran.test(rj.sf2$cobertura, pesos.vizrj) #moran global

#correlograma
correl <- sp.correlogram(vizrj, rj.sf2$cobertura, order = 5, method = "I")
correl

#Correlograma
jpeg(file="correl_rj.jpg", width = 15, height = 10, units = "cm", pointsize = 12,res = 600, quality = 85)
plot(correl, main = " ")
dev.off()

#mun. com p-valores mais significativos no Moran Local
rj.sf2$pval <- localmoran(rj.sf2$cobertura, pesos.vizrj)[, 5]

jpeg(file="pv_rj.jpg", width = 15, height = 10, units = "cm", pointsize = 12,res = 600, quality = 85)
tm_shape(rj.sf2) + 
  tm_polygons(col = "pval", title = "p-valores",
              breaks = c(0, 0.01, 0.05, 0.1, 1), border.col = "white",
              palette = "-Oranges") + 
  tm_scale_bar(width = 0.15) +
  tm_compass() +
  tm_layout(frame = FALSE) + 
  tmap_mode("plot")
dev.off()

#Moran Local (Lisa Map) da cobertura:
resIrj <- localmoran.sad(lm(rj.sf2$cobertura ~ 1), 1:length(vizrj),
                       vizrj, style = "W")
summary(resIrj)[1:5, ]

rj.sf2$MoranLocal <- summary(resIrj)[, 1]

moran_rj <- ggplot(rj.sf2) + 
  geom_sf(aes(fill = MoranLocal), color = "black",
          size = 0.2) + 
  colorspace::scale_fill_continuous_diverging(palette = "Blue-Red 3",
                                              mid = 0) + 
  #annotation_scale(location = "bl", width_hint = 0.4) +
  #annotation_north_arrow(location = "bl", which_north = "true", style = north_arrow_minimal) +
  #coord_sf(crs tio= 31981) +
  #ggtitle("Moran local") + 
  theme_void()
ggsave("moran_rj.jpg",moran_rj, dpi=300)

#Global Moran 
moran.test(rj.sf2$cobertura, pesos.vizrj)
#Spatial autocorrelation is present; 
#the observed pattern is unlikely to be random.

```

## **Resultados**

A cobertura vacinal das doses 1 e 2 das vacinas contra a COVID-19 variou entre 45,9% e 122,3% no estado do Rio de Janeiro, com mediana de 80,5%. Os valores mínimo e máximo foram observados nos municípios de São Fidélis e Macuco, respectivamente. Do total de 92 municípios do estado, apenas 25 atingiram a meta de 90% de cobertura para as duas doses. A distribuição espacial da cobertura vacinal encontra-se disposta na @fig-Figura8.

```{r Figura8, include=TRUE}
#| label: fig-Figura8
#| fig-cap: "Cobertura vacinal das doses 1 e 2 contra a COVID-19 por município do estado do Rio de Janeiro em dezembro de 2023."
#| out-width: "90%"
knitr::include_graphics("tematico_rj.jpg", dpi=600)

```

Para identificar a estrutura de correlação espacial entre os municípios, foi obtida uma matriz de vizinhança por contiguidade. O mapa de conectividade por contiguidade dos municípios do Rio de Janeiro é apresentado na @fig-Figura9.

```{r Figura9, include=TRUE}
#| label: fig-Figura9
#| fig-cap: "Mapa de conectividade por contiguidade dos municípios do Rio de Janeiro."
#| out-width: "80%"

conect_rj

```

O índice Global de Moran foi de 0,2, indicando a presença de associação espacial positiva na cobertura vacinal para COVID-19 (doses 1 e 2) nos municípios do Rio de Janeiro (p-valor = 0,001). A autocorrelação espacial em diferentes distâncias ou intervalos de defasagem encontra-se disposta na @fig-Figura10. Os resultados do correlograma indicam baixa correlação positiva entre os municípios mais próximos e baixa correlação negativa quando os municípios se distanciam.


```{r Figura10, include=TRUE}
#| label: fig-Figura10
#| fig-cap: "Correlograma para a cobertura vacinal das doses 1 e 2 contra a COVID-19 por município do estado do Rio de Janeiro em dezembro de 2023."
#| out-width: "80%"

knitr::include_graphics("correl_rj.jpg", dpi=600)

```

A @fig-Figura11 ilustra os municípios que tiveram os p-valores mais significativos no Moran Local. O mapa temático Moran Local (Lisa Map) para a cobertura vacinal consta na @fig-Figura12. A relação desses resultados mostram que algumas áreas apresentam alta correlação espacial. O aglomerado de muncípios em vermelho sinaliza tendência de aumento da cobertura vacinal na medida que os vizinhos aumentam (Rio das Flores,Paraíba do Sul, Paty do Alferes, Vassouras, Engenheiro de Paulo Frontin, Mendes, Barra do Piraí, Volta Redonda e Barra Mansa). Também, observa-se que a capital do Rio de Janeiro tem uma cobertura relativamente mais baixa que seus vizinhos, mesmo tendo atingido a meta de cobertura.

```{r Figura11, include=TRUE}
#| label: fig-Figura11
#| fig-cap: " Municípios com p-valores significativos no Moran Local para a cobertura vacinal das doses 1 e 2 contra a COVID-19."
#| out-width: "80%"

knitr::include_graphics("pv_rj.jpg", dpi=600)

```

```{r Figura12, include=TRUE}
#| label: fig-Figura12
#| fig-cap: "Moran Local (Lisa Map) para a cobertura vacinal das doses 1 e 2 contra a COVID-19 por município do estado do Rio de Janeiro em dezembro de 2023."
#| out-width: "80%"

moran_rj

```
```{r modelo}
#IDH 2010 IBGE
idh <- read.csv("IDH.csv")

cd_mun <- as.data.frame(rj.sf2[,c(1,2)])
idh <- cbind(cd_mun,idh)
idh <- idh[,-3]

rj.sf2 <- left_join(rj.sf2, idh[], by = "CD_MUN")

g3rj <- ggplot(rj.sf2) + 
  geom_sf(aes(fill = X2010), size = 0.2) +
    scale_fill_continuous_sequential(palette = "Viridis",
        name = "IDH") + 
  #labs(title = "IDH, 2010") +
    theme_void()

plot_idh <- ggpubr::ggarrange(g1rj, g3rj, nrow = 2)
ggsave("idh_rj.jpg",plot_idh, dpi=300)

#modelo CAR

#install.packages("spatialreg")
library(spatialreg)

cob.car <- spatialreg::spautolm(cobertura ~ X2010, data = rj.sf2,listw = pesos.vizrj, family = "CAR")

summary(cob.car)

#residuos
cob.car$carresid <- residuals(cob.car)
moran.test(cob.car$carresid, pesos.vizrj)
#indica presenca de autocorrelacao nos residuos

#pelo modelo GWR
#banda ideal
install.packages("spgwr")
library(spgwr)

#tamanho de banda ideal
GWRbanda <- gwr.sel(cobertura ~ X2010, data = rj.sf2,coords = coordenadas, adapt = T)

#modelo gwr
cob.gwr <- gwr(cobertura ~ X2010, data = rj.sf2,
    coords = coordenadas, adapt = GWRbanda, hatmatrix = TRUE, se.fit = TRUE)

cob.gwr

results <- as.data.frame(cob.gwr$SDF)
head(results)

#autocorrelacao nos residuos
results$residuos <- rj.sf2$cobertura - results$pred
moran.test(results$residuos, pesos.vizrj)
#residuos sem autocorrelacao

#paleta de cores
#library(ColorBrewer)
#pal <- brewer.pal(n = 10, name = "BuPu")

rj.sf2$coef.IDH <- results$X2010
rj.sf2$localR2 <- results$localR2
rj.sf2$pred.gwr <- results$pred

map.idh <- ggplot(rj.sf2) + 
  geom_sf(aes(fill = coef.IDH),
    color = "black", size = 0.2) + 
  scale_fill_gradientn(colours = terrain.colors(10)) +
  ggtitle("(a)") +
    theme_void()

#significancia por Wald

# Calculando a estatística de wald
rj.sf2$wald.teste <- abs(results$X2010/results$X2010_se)
# Dicotomizando a estatística de wald
rj.sf2$wald.teste <- ifelse(rj.sf2$wald.teste < 2, 0, 1)


map.wald <- ggplot(rj.sf2) + 
  geom_sf(aes(fill = factor(wald.teste)),
    color = "black", size = 0.2) + scale_fill_manual(values = c("white",
    "orange"), labels = c("< 2", ">= 2"), name = "Wald") +
  ggtitle("(b)") + theme_void()

gridExtra::grid.arrange(map.idh, map.wald, nrow = 2)

```
## **Discussão**

\newpage

# **Referências**

<div id="refs"></div>

\newpage

# Anexo {-} 

```{r child='_appendix.Rmd'}

```

